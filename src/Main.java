public class Main {
    public static void main(String[] args) {
        task1();
        task2();
        task3();
        task4();
        task5();
        task6();
        task7();
        task8();
    }

    public static void task1() {
        /**Задача 1
         Продолжите работать с кодом, который вы написали в предыдущем уроке — в задачах с накоплениями.
         С помощью цикла while посчитайте, сколько месяцев потребуется, чтобы накопить 2 459 000 рублей при условии,
         что первоначально мы имеем 0 рублей и готовы откладывать по 15 тысяч рублей.
         Результат программы должен быть выведен в консоль с тем количеством месяцев, которое необходимо для накопления
         данной суммы. Формат сообщения: «Месяц …, сумма накоплений равна … рублей».*/

        System.out.println("\nЗадача_1:");

        float money = 0;
        float interests;
        int month = 0;
        while (money <= 2_500_000) { // округлил до 2,5 так как из-за начисляемых процентов порог не проходит в диапазоне суммы следующего шага.
            month++;
            money = money + 15000;
            interests = money * 0.01F;
            money = money + interests;
            if (month % 7 == 0) {
                System.out.println("Месяц " + month + ", сумма накоплений равна " + money + " рублей.");
            }
        }
    }

    public static void task2() {

        /**Задача 2
         Выведите в одну строку через пробел числа от 1 до 10 с помощью цикла while.
         На следующей строке выведите числа в обратном порядке от 10 до 1 с помощью цикла for.
         Для обоих циклов можно использовать как одну общую переменную, так и в каждом цикле свою.
         Не забудьте выполнить переход на новую строку между двумя циклами.
         В результате программы вывод должен получиться следующий:
         1 2 3 4 5 6 7 8 9 10
         10 9 8 7 6 5 4 3 2 1*/

        System.out.println("\nЗадача_2:");

        int a = 1;
        int b = 10;
        while (a <= b) {
            System.out.print(a + " ");
            a++;
        }
        a = 1;
        System.out.println(" ");
        for (;b >= a; b--) {
            System.out.print(b + " ");
        }
    }

    public static void task3() {

        /**Задача 3
         В стране Y население равно 12 миллионов человек.
         Рождаемость составляет 17 человек на 1000, смертность — 8 человек. Рассчитайте, какая численность населения
         будет через 10 лет, если показатели рождаемости и смертности постоянны.
         В консоль выведите результат операции на каждый год в формате: «Год …, численность населения составляет …».*/

        System.out.println("\n\nЗадача_3:");

        int y = 12_000_000;
        int birthrate1000 = 17;
        int mortality1000 = 8;
        int clearBirthrate = birthrate1000 - mortality1000;
        int clearBirthrate1mln = clearBirthrate * 1000;
        int throughYears = 1;

        while (throughYears <= 10) {
            y = clearBirthrate1mln * (y / 1000000) + y;
            System.out.println("Год " + throughYears + " численность населения составляет " + y);
            throughYears++;
        }
        System.out.println("\nЧерез десять лет численность населения достигла " + y + " человек.");
    }

    public static void task4() {

        /**Задача 4
         Василий решил положить деньги на накопительный счет, где каждый месяц к сумме его вклада добавляется еще 7%.
         Первоначальная сумма вклада — 15 тысяч рублей.
         Вычислите и выведите в консоль, сколько месяцев Василию нужно будет копить, чтобы собрать сумму в 12 миллионов
         рублей при условии, что процент банка от накоплений не меняется, а всегда равен 7%.
         Выведите в консоль результат программы с указанием суммы накоплений по каждому месяцу.*/

        System.out.println("\nЗадача_4:");

        int money = 15000;
        float interestsPerMonth = 0.07F;
        float interestsMoney;
        int month = 0;
        while (money <= 12_000_000) {
            month++;
            interestsMoney = money * interestsPerMonth;
            money = money + (int)interestsMoney;
                System.out.println("Месяц " + month + ", сумма накоплений равна " + money + " рублей.");

        }
    }

    public static void task5() {

        /**Задача 5
        Видоизмените программу таким образом, чтобы в консоль выводились не все месяцы подряд,
        а только каждый шестой. Должны быть видны накопления за 6, 12, 18, 24-й и следующие месяцы.*/

        System.out.println("\nЗадача_5:");

        int money = 15000;
        float interestsPerMonth = 0.07F;
        float interestsMoney;
        int month = 0;
        while (money <= 12_000_000) {
            month++;
            interestsMoney = money * interestsPerMonth;
            money = money + (int)interestsMoney;
            if (month % 6 == 0) {
                System.out.println("Месяц " + month + ", сумма накоплений равна " + money + " рублей.");
            }
        }
    }

    public static void task6() {

        /**Задача 6
         Василий решил, что будет копить деньги ближайшие 9 лет. Он хочет знать, какой будет сумма его накоплений каждые
         полгода на протяжении этих 9 лет.
         Исходная сумма всё та же — 15 тысяч рублей, проценты банка – 7% ежемесячно.
         Напишите программу, которая будет выводить сумму накоплений за каждые полгода в течение 9 лет.*/

        System.out.println("\nЗадача_6:");

        int money = 15000;
        float interestsPerMonth = 0.07F;
        float interestsMoney;
        int month = 0;
        int nineYears = 108;
        while (month <= nineYears) {
            month++;
            interestsMoney = money * interestsPerMonth;
            money = money + (int)interestsMoney;
            if (month % 6 == 0) {
                System.out.println("Месяц " + month + ", сумма накоплений равна " + money + " рублей.");
            }
        }
    }

    public static void task7() {

        /**Задача 7
         В компании пятница — отчетный день.
         Нужно написать программу, которая считает дни месяца по датам, определяет, какой день пятница, и выводит
         сообщение с напоминанием, что нужно подготовить еженедельный отчет.
         Создайте переменную типа int, которая хранит в себе номер первой пятницы месяца (число от 1 до 7).
         Выведите на каждую пятницу месяца (включая полученную) сообщение следующего вида:
         «Сегодня пятница, ...-е число. Необходимо подготовить отчет».
         В нашем месяце 31 день. В результате у вас должно получиться от 4 до 5 сообщений с напоминаниями по разным датам.*/

        System.out.println("\nЗадача_7:");

        int friday = 4;
        int week = 7;
        int totalMonthDays = 31;
     /*   System.out.println("Сегодня пятница, " + friday + "-е число. Необходимо подготовить отчет.");
        while (friday + week <= totalMonthDays) {
            friday += week;
            System.out.println("Сегодня пятница, " + friday + "-е число. Необходимо подготовить отчет.");
        } */
        for (; friday <= totalMonthDays; friday = week + friday) {
            System.out.println("Сегодня пятница, " + friday + "-е число. Необходимо подготовить отчет.");
        }
    }


    public static void task8() {

        /**Задача 8
         Нам нужно написать астрономическое приложение, которое считает, когда над Землей пролетает комета.
         Известно, что комета пролетает каждый 79-й год, начиная с нулевого.
         В консоль нужно вывести все годы за последние 200 лет, когда появлялась комета, а также следующий год ее появления (ближайшие 100 лет).
         Для вычисления периода можно создать две дополнительные переменные, которые содержат год за 200 лет до текущего
         (из созданной ранее переменной) в качестве старта и 100 лет после в качестве завершения периода расчета.
         В результате решения задачи в консоли должен получиться следующий результат:
         1896
         1975
         2054*/

        System.out.println("\nЗадача_8:");

        int zeroYear = 0;
        int iCanSeeComet = 79;
        int now = 2022;
        int two00ago = now - 200;
        int one00forward = now + 100;

        while (zeroYear < one00forward) {
            zeroYear += iCanSeeComet;
            if (zeroYear >= two00ago && zeroYear < one00forward) {
                System.out.println(zeroYear);
            }
        }
    }
}